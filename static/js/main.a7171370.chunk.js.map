{"version":3,"sources":["components/TableRow/TableRow.js","components/Pagination/Pagination.js","components/Table/Table.js","utils/Api.js","utils/constants.js","components/Preloader/Preloader.js","components/UserInfo/UserInfo.js","components/FormAddUser/FormAddUser.js","components/FilterForm/FilterForm.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["TableRow","props","user","id","firstName","lastName","email","phone","className","onClick","handleRowClick","Pagination","data","pageSize","portionSize","setUsersToRender","useState","activeItem","setActiveItem","portionCount","setPortionCount","pageCount","Math","ceil","length","items","i","push","portionTotalCount","subItems","slice","handleItemClick","evt","numberOfItem","parseInt","target","closest","textContent","arrToRender","prev","href","map","item","Table","usersToRender","isIncrease","setIsIncrease","dataSort","reverse","sort","a","b","index","api","minFetch","maxFetch","_initialRequest","res","ok","json","Promise","reject","status","getMinData","fetch","_minFetch","method","then","getMaxData","_maxFetch","this","Preloader","UserInfo","address","description","city","state","streetAddress","zip","onClose","value","readOnly","FormAddUser","values","setValues","activeLabel","setActiveLabel","isValid","handleChange","name","isVisible","onChange","onSubmit","preventDefault","onReset","type","required","htmlFor","onFocus","onBlur","mask","radix","unmask","onAccept","disabled","FilterForm","setDataForRender","styles","submitButton","resetButton","inputId","filteredKeys","Object","keys","forEach","key","keysForSearch","filteredData","filter","toString","toLowerCase","includes","M","toast","html","reduceData","reduce","result","App","users","setUsers","userInfo","setUserInfo","isPreloaderVisible","setIsPreloaderVisible","isUserInfoOpen","setIsUserInfoOpen","isFormAddUserVisible","setIsFormAddUserVisible","resetBeforeFetch","finally","catch","err","message","formData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7171370.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TableRow(props) {\n  const user = props.user;\n  const { id, firstName, lastName, email, phone } = user;\n\n  const handleClick = () => {\n    props.handleRowClick(user)\n  }\n\n  return (\n    <tr className=\"table-row\" onClick={handleClick}>\n      <td className=\"center-align\" >{ id }</td>\n      <td>{ firstName }</td>\n      <td>{ lastName }</td>\n      <td>{ email }</td>\n      <td>{ phone }</td>\n    </tr>\n  );\n}\n\nexport default TableRow;","import React, { useState } from 'react';\n\nfunction Pagination(props) {\n  const { data, pageSize, portionSize, setUsersToRender } = props;\n  const [activeItem, setActiveItem] = useState(1);\n  const [portionCount, setPortionCount] = useState(0);\n\n  const pageCount = Math.ceil(data.length / pageSize)\n\n  let items = []\n  for (let i = 1; i <= pageCount; i++) {\n    items.push(i)\n  }\n\n  let portionTotalCount = Math.ceil(pageCount / portionSize)\n\n  let subItems = []\n  for (let i = 0; i <Math.ceil(items.length / portionSize); i++){\n    subItems[i] = items.slice((i * portionSize), (i * portionSize) + portionSize);\n  }\n\n  const handleItemClick = (evt) => {\n    const numberOfItem = parseInt(evt.target.closest('a').textContent)\n    setActiveItem(numberOfItem)\n\n    // console.log(`a: ${pageSize * numberOfItem - pageSize} b: ${numberOfItem * pageSize}`)\n    const arrToRender = data.slice(pageSize * numberOfItem - pageSize, numberOfItem * pageSize)\n    setUsersToRender(arrToRender)\n  }\n\n  const increaseItem = () => {\n    if (portionCount === portionTotalCount - 1) { return }\n    setPortionCount(prev => prev + 1)\n  }\n\n  const decreaseItem = () => {\n    if (portionCount === 0) { return }\n    setPortionCount(prev => prev - 1)\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li onClick={decreaseItem} className={portionCount !== 0 ? 'waves-effect' : 'disabled'}>\n        <a href=\"#!\"><i className=\"material-icons\">chevron_left</i></a>\n      </li>\n\n      {\n        subItems[portionCount].map(item =>\n          <li key={item} onClick={handleItemClick} className={activeItem === item ? 'active' : 'waves-effect'}>\n            <a href=\"#!\">{ item }</a>\n          </li>)\n      }\n\n      <li onClick={increaseItem} className={portionCount !== portionTotalCount - 1 ? 'waves-effect' : 'disabled'}>\n        <a href=\"#!\"><i className=\"material-icons\">chevron_right</i></a>\n      </li>\n    </ul>\n  );\n}\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './Table.css'\nimport TableRow from \"../TableRow/TableRow\";\nimport Pagination from \"../Pagination/Pagination\";\n\nfunction Table(props) {\n  const { data, usersToRender, setUsersToRender, handleRowClick } = props\n  const [isIncrease, setIsIncrease] = useState(false);\n\n  const handleSortId = () => {\n    let dataSort\n\n    if (isIncrease) {\n      dataSort = usersToRender.map(item => { return item }).reverse()\n      setUsersToRender(dataSort)\n      setIsIncrease(false)\n      return;\n    }\n\n    dataSort =\n      usersToRender.sort((a, b) => {\n        if (a.id > b.id) { return 1 }\n        if (a.id < b.id) { return -1 }\n        return 0\n      }).map(item => { return item })\n\n    setUsersToRender(dataSort)\n    setIsIncrease(true)\n\n  }\n\n  return (\n    <>\n      { data.length > 49 &&\n      <Pagination\n        data={data}\n        setUsersToRender={setUsersToRender}\n        pageSize={50}\n        portionSize={5} />\n      }\n      <table className=\"table striped z-depth-4\">\n        <thead>\n        <tr>\n          <th onClick={handleSortId} className=\"center-align\" >\n            ID <i className=\"material-icons\">{ isIncrease ? \"arrow_drop_up\" : \"arrow_drop_down\" }</i>\n          </th>\n          <th>First Name <i className=\"material-icons\"></i></th>\n          <th>Last Name <i className=\"material-icons\"></i></th>\n          <th>Email <i className=\"material-icons\"></i></th>\n          <th>Phone <i className=\"material-icons\"></i></th>\n        </tr>\n        </thead>\n\n        <tbody>\n        {\n          usersToRender.map((user, index) => (\n              <TableRow handleRowClick={handleRowClick} key={index} user={user} />\n            )\n          )\n        }\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Table;\n","import { MAX_DATA_FETCH, MIN_DATA_FETCH } from './constants';\n\nclass Api {\n  constructor({ minFetch, maxFetch }) {\n    this._minFetch = minFetch\n    this._maxFetch = maxFetch\n  }\n\n  _initialRequest = (res) => {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getMinData = () => {\n    return fetch(this._minFetch, {method: 'GET'})\n      .then(res => this._initialRequest(res))\n  }\n\n  getMaxData = () => {\n    return fetch(this._maxFetch, {method: 'GET'})\n      .then(res => this._initialRequest(res))\n  }\n}\n\nconst api = new Api({\n  minFetch: MIN_DATA_FETCH,\n  maxFetch: MAX_DATA_FETCH\n})\n\nexport default api;\n","export const MIN_DATA_FETCH = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\nexport const MAX_DATA_FETCH = 'http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D'","import React from 'react';\n\nfunction Preloader() {\n  return (\n    <div className=\"preloader-wrapper active\">\n      <div className=\"spinner-layer spinner-red-only\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Preloader;","import React from 'react';\nimport './UserInfo.css'\n\nfunction UserInfo(props) {\n  const { address, description, firstName, lastName } = props.user;\n  const { city, state, streetAddress, zip } = address;\n  const { onClose } = props\n\n  const handleCloseClick = () => {\n    onClose(false)\n  }\n\n  return (\n    <section className=\"user-info row z-depth-4\">\n      <div className=\"col s10\">\n        <h4>User info</h4>\n        <p>Выбран пользователь: <b>{ `${firstName} ${lastName}` }</b></p>\n        <div className=\"row\">\n          <p>Описание:</p>\n          <textarea className=\"col s8\" value={ description } readOnly />\n        </div>\n        <p>Адрес проживания: <b>{ streetAddress }</b></p>\n        <p>Город: <b>{ city }</b></p>\n        <p>Провинция/штат: <b>{ state }</b></p>\n        <p>Индекс: <b>{ zip }</b></p>\n      </div>\n      <button\n        onClick={handleCloseClick}\n        className=\"user-info__close-btn col s2 waves-effect waves-light btn blue lighten-2\">Close</button>\n    </section>\n\n  );\n}\n\nexport default UserInfo;\n","import React, { useState } from 'react';\nimport { IMaskInput } from 'react-imask';\n\nfunction FormAddUser(props) {\n  const [values, setValues] = useState({\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: ''\n  });\n\n  const [activeLabel, setActiveLabel] = useState(false);\n\n  let isValid =\n    values.id === '' || values.firstName === '' ||\n    values.lastName === '' || values.email === '' || values.phone === ''\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n\n    setValues((prev) => {\n      return { ...prev, [name]: value }\n    })\n  }\n\n  const handleFocus = () => {\n    setActiveLabel(true)\n  }\n\n  const handleBlur = (evt) => {\n    const { value } = evt.target\n\n    if (value.length === 0) {\n      setActiveLabel(false)\n    }\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    props.onSubmit(values)\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  const handleReset = () => {\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  return (\n    props.isVisible &&\n    <section>\n      <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n        <h4>Add user</h4>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.id}\n            name=\"id\" id=\"id\" type=\"number\" className=\"validate\" required />\n          <label htmlFor=\"id\">Id</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.firstName}\n            name=\"firstName\" id=\"first-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"first-name\">First Name</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.lastName}\n            name=\"lastName\" id=\"last-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"last-name\">Last Name</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <input\n            onChange={handleChange}\n            value={values.email}\n            name=\"email\" id=\"email\" type=\"email\" className=\"validate\" required />\n          <label htmlFor=\"email\">Email</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <IMaskInput\n            id=\"phone\"\n            // type=\"tel\"\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            mask={'(000)000-0000'}\n            radix=\".\"\n            value={values.phone}\n            unmask={false}\n            onAccept={(value) => {\n              setValues(prev => { return { ...prev, phone: value } })\n            }}\n          />\n          <label className={activeLabel ? 'active' : ''} htmlFor=\"phone\">Phone</label>\n        </div>\n        <button\n          type=\"submit\"\n          disabled={isValid}\n          className=\"col s4 waves-effect waves-light btn green lighten-2\">Add</button>\n        <button\n          type=\"reset\"\n          className=\"col s4 waves-effect waves-light btn black-text transparent\">Reset</button>\n      </form>\n\n    </section>\n  );\n}\n\nexport default FormAddUser;\n","import React, { useState } from 'react';\nimport M from 'materialize-css';\n\nfunction FilterForm(props) {\n  const { data, setDataForRender } = props;\n  const [values, setValues] = useState({});\n\n  const styles = {\n    submitButton: data.length < 50\n      ? 'col s1 waves-effect waves-light btn green lighten-2'\n      : 'col s2 waves-effect waves-light btn green lighten-2',\n\n    resetButton: 'col s2 waves-effect waves-light btn black-text transparent',\n\n    inputId: data.length < 50\n      ? 'input-field col s1'\n      : 'input-field col s2'\n  }\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setValues((prev) => { return { ...prev, [name]: value } })\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n\n    let filteredKeys = {}\n\n    const keys = Object.keys(values) // создаем массив ключей из стейта\n\n    keys.forEach(key => { // удаляем пустые свойства\n      if (values[key] !== '') {\n        filteredKeys[key] = values[key]\n      } else { return }\n    })\n\n    const keysForSearch = Object.keys(filteredKeys)\n\n    let filteredData = []\n\n    keysForSearch.forEach(key => {\n      let arr =\n        data.filter(\n          item => item[key].toString().toLowerCase().includes(values[key].toLowerCase())\n        )\n\n      arr.forEach(i => filteredData.push(i))\n    })\n\n    if (filteredData.length === 0) {\n      return M.toast({ html: 'User not found' })\n    } else {\n      const reduceData = filteredData.reduce((result, item) => {\n        return result.includes(item) ? result : [...result, item] // удаляем повторяющиеся объекты\n      }, [])\n\n      setDataForRender(reduceData)\n    }\n  }\n\n  const handleReset = () => {\n    setDataForRender(data.slice(0, 50))\n    setValues({})\n  }\n\n  return (\n    <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n      <h4>Filter</h4>\n      <div className={styles.inputId}>\n        <input\n          onChange={handleChange}\n          value={values.id ? values.id : ''}\n          name=\"id\" id=\"filterId\" type=\"number\" className=\"validate\" />\n        <label htmlFor=\"filterId\">Id</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.firstName ? values.firstName : ''}\n          name=\"firstName\" id=\"filterFirst-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterFirst-name\">First Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.lastName ? values.lastName : ''}\n          name=\"lastName\" id=\"filterLast-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterLast-name\">Last Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.email ? values.email : ''}\n          name=\"email\" id=\"filterEmail\" type=\"email\" className=\"validate\" />\n        <label htmlFor=\"filterEmail\">Email</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.phone ? values.phone : ''}\n          name=\"phone\" id=\"filterPhone\" type=\"tel\" className=\"validate\" />\n        <label htmlFor=\"filterPhone\">Phone</label>\n      </div>\n      <button type=\"submit\" className={styles.submitButton}>Find</button>\n      {\n        data.length > 50 ? <></> :\n        <button type=\"reset\" className={styles.resetButton}>Show table</button>\n      }\n    </form>\n  );\n}\n\nexport default FilterForm;\n","import React, { useState } from 'react';\n\nimport Table from \"../Table/Table\";\nimport api from '../../utils/Api';\nimport Preloader from \"../Preloader/Preloader\";\nimport UserInfo from \"../UserInfo/UserInfo\";\nimport FormAddUser from \"../FormAddUser/FormAddUser\";\nimport FilterForm from \"../FilterForm/FilterForm\";\nimport M from 'materialize-css'\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [usersToRender, setUsersToRender] = useState([]);\n  const [userInfo, setUserInfo] = useState({});\n  const [isPreloaderVisible, setIsPreloaderVisible] = useState(false);\n  const [isUserInfoOpen, setIsUserInfoOpen] = useState(false);\n  const [isFormAddUserVisible, setIsFormAddUserVisible] = useState(false);\n\n  const resetBeforeFetch = () => {\n    setUsers([])\n    setUsersToRender([])\n    setIsUserInfoOpen(false)\n    setIsPreloaderVisible(true)\n  }\n\n  const handleGetMinData = () => {\n    resetBeforeFetch()\n\n    api.getMinData()\n      .then(res => {\n        setUsers(res)\n        setUsersToRender(res.slice(0, 50))\n      })\n      .finally(() => setIsPreloaderVisible(false))\n      .catch((err) => M.toast({html: err.message}))\n  }\n\n  const handleGetMaxData = () => {\n    resetBeforeFetch()\n\n    api.getMaxData()\n      .then(res => {\n        setUsers(res)\n        setUsersToRender(res.slice(0, 50))\n      })\n      .finally(() => setIsPreloaderVisible(false))\n      .catch((err) => M.toast({html: err.message}))\n  }\n\n  const handleAddUser = (formData) => {\n    setUsers([formData, ...users])\n    setUsersToRender([formData, ...users])\n    M.toast({ html: 'User added!' })\n  }\n\n  const openFormAddUser = () => {\n    if (isFormAddUserVisible) {\n      setIsFormAddUserVisible(false)\n    } else {\n      setIsFormAddUserVisible(true)\n    }\n  }\n\n  const handleRowClick = (user) => {\n    if (!isUserInfoOpen) {\n      setIsUserInfoOpen(true)\n    }\n\n    setUserInfo(user)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Test task</h1>\n        <div className=\"row\">\n          <button\n            onClick={handleGetMinData}\n            className=\"col s4 waves-effect waves-light btn pink lighten-2\">Get min data</button>\n          <button\n            onClick={handleGetMaxData}\n            className=\"col s4 waves-effect waves-light btn purple lighten-2\">Get max data</button>\n          <button\n            onClick={openFormAddUser}\n            className=\"col s4 waves-effect waves-light btn blue lighten-2\">\n            { isFormAddUserVisible ? 'Close form' : 'Add user' }\n          </button>\n        </div>\n        <FormAddUser isVisible={isFormAddUserVisible} onSubmit={handleAddUser} />\n        { isPreloaderVisible && <Preloader /> }\n        { users.length > 0  &&\n          <>\n            <FilterForm\n              setDataForRender={setUsersToRender}\n              data={users} />\n            <Table\n              setUsersToRender={setUsersToRender}\n              handleRowClick={handleRowClick}\n              usersToRender={usersToRender}\n              data={users}/>\n            { isUserInfoOpen && <UserInfo onClose={setIsUserInfoOpen} user={userInfo}/> }\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}